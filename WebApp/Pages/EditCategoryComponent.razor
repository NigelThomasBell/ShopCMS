@page "/editcategory/{categoryId}"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject IAddCategoryUseCase AddCategoryUseCase
@inject IGetCategoryByIdUseCase GetCategoryByIdUseCase
@inject IEditCategoryUseCase EditCategoryUseCase

<div class="card w-100">
    <div class="card-body">
        <h2 class="mb-3">Edit Category</h2>
        @if (category != null)
        {
            <EditForm Model="category" OnValidSubmit="OnValidSumit">
                <DataAnnotationsValidator></DataAnnotationsValidator>
                <ValidationSummary></ValidationSummary>

                <div class="form-group mb-3">
                    <label for="name">Name</label>
                    <InputText id="name" @bind-Value="category.Name" class="form-control"></InputText>
                </div>

                <div class="form-group mb-3">
                    <label for="description">Description</label>
                    <InputText id="description" @bind-Value="category.Description" class="form-control"></InputText>
                </div>
                
                <div class="form-group">
                    <button type="submit" class="btn btn-primary me-2">Save</button>
                    <button type="button" class="btn btn-primary" @onclick="OnCancel">Cancel</button>
                </div>
            </EditForm>

        }
    </div>
</div>

@code {
    [Parameter]
    public string CategoryId { get; set; }

    private Category category;

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        if (int.TryParse(this.CategoryId, out int iCategoryId))
        {
            var cat = GetCategoryByIdUseCase.Execute(iCategoryId);
            this.category = new Category { CategoryId = cat.CategoryId, Name = cat.Name, Description = cat.Description };
        }
    }

    private void OnValidSumit()
    {
        EditCategoryUseCase.Execute(this.category);
        NavigationManager.NavigateTo("/categories");
    }

    private void OnCancel()
    {
        NavigationManager.NavigateTo("/categories");
    }

}

@page "/categories"
@attribute [Authorize(Policy = "AdminOnly")]

@inject NavigationManager NavigationManager
@inject UseCases.IViewCategoriesUseCase ViewCategoryUseCase
@inject UseCases.IDeleteCategoryUseCase DeleteCategoryUseCase


<div class="card w-100">
    <div class="card-body">
        <h2 class="mb-3">Product Categories</h2>
        @if (categories != null)
        {

            <table class="table">
                <thead>
                    <tr>
                        <th>Name</th>
                        <th>Description</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var category in categories)
                    {
                        <tr>
                            <td>@category.Name</td>
                            <td>@category.Description</td>
                            <td class="d-flex justify-content-end">
                                <button type="button" @onclick="@(() => EditCategory(category))" class="btn btn-link">Edit</button>
                                <button type="button" @onclick="@(() => DeleteCategory(category.CategoryId))" class="btn btn-link">Delete</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        <button type="button" @onclick="OnClickAddCategory" class="btn btn-primary">Add Category</button>
    </div>
</div>

@code {

    private List<Category> categories;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        LoadCategories();
    }

    private void OnClickAddCategory()
    {
        NavigationManager.NavigateTo("/addcategory");
    }

    private void EditCategory(Category category)
    {
        NavigationManager.NavigateTo($"/editcategory/{category.CategoryId}");
    }

    private void DeleteCategory(int categoryId)
    {
        DeleteCategoryUseCase.Delete(categoryId);
        LoadCategories();
    }

    private void LoadCategories()
    {
        categories = ViewCategoryUseCase.Execute()?.ToList();
    }
}
